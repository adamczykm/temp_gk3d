#version 330 core

// in
layout(location = 0) in vec3 v_position_model;
layout(location = 1) in vec3 v_normal_model;

// out
out vec3 position_world;
out vec3 normal_camera;
out vec3 eyedir_camera;
out vec3 lamp1dir_camera;
out vec3 lamp2dir_camera;
out vec3 screenlightdir_camera;
out vec3 screendir_camera;


// consts
uniform mat4 MVP;
uniform mat4 V;
uniform mat4 M;

uniform vec3 lamp1_pos_world;
uniform vec3 lamp2_pos_world;
uniform vec3 screenpos_world;
uniform vec3 screendir_world;

void main(){

  gl_Position = MVP * vec4(v_position_model, 1);
  position_world = (M * vec4(v_position_model, 1)).xyz;

  // camera
  vec3 position_camera = ( V * M * vec4(v_position_model, 1)).xyz;
  eyedir_camera = vec3(0,0,0) - position_camera;
  normal_camera = ( V * M * vec4(v_normal_model, 0)).xyz;

  // lamp1
  position_camera =  (V * vec4(lamp1_pos_world, 1)).xyz;
  lamp1dir_camera = position_camera + eyedir_camera;

  // lamp2
  position_camera =  (V * vec4(lamp2_pos_world, 1)).xyz;
  lamp2dir_camera = position_camera + eyedir_camera;

  // screen
  position_camera = (V * vec4(screenpos_world, 1)).xyz;
  screendir_camera = ( V * vec4(screendir_world, 0)).xyz;
  screenlightdir_camera = position_camera + eyedir_camera;
 
}
